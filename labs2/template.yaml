AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  tp2

  CRUD lambda dynamo BD

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
    Runtime: python3.8
    MemorySize: 1028

Parameters:
  Table:
    Type: String
    Default: Article
  Region:
    Type: String
    Default: eu-west-3
  bucketPerson:
    Type: String
    Default: person-file

Resources:

  MyCountry:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: src/layers/my_country
      CompatibleRuntimes:
        - python3.8
    #Metadata : 
    #  BuildMethod : python3.8

  S3Bucket:
    Type: AWS::S3::Bucket
    Description: Creating Amazon S3 bucket from CloudFormation
    Properties:
      BucketName: !Ref bucketPerson
  getCountryFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/country/get
      Handler: app.lambda_handler
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /country
            Method: get
      Layers:
        - !Ref MyCountry

  postPersonFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/person/post
      Handler: app.lambda_handler
      Environment:
        Variables:
          TABLE: !Select [1, !Split ['/', !GetAtt PersonTable.Arn]]
          bucket_person: !Ref bucketPerson
          lambda_country: !GetAtt getCountryFunction.Arn
      Events:
        personPost:
          Type: Api
          Properties:
            Path: /person
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "*"
        - S3FullAccessPolicy:
            BucketName: !Ref bucketPerson
        - LambdaInvokePolicy:
            FunctionName: "*"


  getPersonFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/person/getById
      Handler: app.lambda_handler      
      Environment:
        Variables:
          TABLE: !Select [1, !Split ['/', !GetAtt PersonTable.Arn]]
      Events:
        personPost:
          Type: Api
          Properties:
            Path: /person
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "*"

  getByCountryPersonFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: src/person/getByCountry
      Handler: app.lambda_handler
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /person/country
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "*"

  PersonTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE

Outputs:
  countryApi:
    Description: "API Gateway endpoint URL for Prod stage for article function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/dev/country/"
  articleFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt getCountryFunction.Arn